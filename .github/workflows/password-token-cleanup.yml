name: Password Token Cleanup

on:
  schedule:
    # Runs hourly at minute 5 (adjust schedule as required)
    - cron: '5 * * * *'
  workflow_dispatch: {}

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Invoke cleanup endpoint (header-auth)
        env:
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          BASE_URL: ${{ secrets.APP_BASE_URL || secrets.NEXT_PUBLIC_BASE_URL }}
        run: |
          if [ -z "$BASE_URL" ]; then
            echo "BASE_URL secret (APP_BASE_URL or NEXT_PUBLIC_BASE_URL) not set" >&2
            exit 1
          fi
          if [ -z "$CRON_SECRET" ]; then
            echo "CRON_SECRET GitHub secret not set" >&2
            exit 1
          fi
          echo "Calling cleanup endpoint at $BASE_URL/api/auth/password/setup/cleanup (header auth)"
          http_code=$(curl -s -o response.json -w '%{http_code}' -X POST "$BASE_URL/api/auth/password/setup/cleanup" \
            -H "x-cron-secret: $CRON_SECRET" -H 'content-length: 0')
          echo "Status: $http_code"
          echo "Response:" && cat response.json
          if [ "$http_code" -ge 300 ]; then
            exit 1
          fi

      - name: Validate response
        run: |
          grep -q '"success":true' response.json || { echo 'Success flag not found'; cat response.json; exit 1; }
          deleted=$(grep -E '"deleted":' response.json | sed -E 's/.*"deleted":[ ]*([0-9]+).*/\1/') || true
          echo "Deleted tokens: ${deleted:-0}"
